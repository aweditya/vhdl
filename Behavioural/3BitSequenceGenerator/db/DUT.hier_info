|DUT
input_vector[0] => SequenceGeneratorStructural:add_instance.clock
input_vector[1] => SequenceGeneratorStructural:add_instance.reset
output_vector[0] << SequenceGeneratorStructural:add_instance.Y[0]
output_vector[1] << SequenceGeneratorStructural:add_instance.Y[1]
output_vector[2] << SequenceGeneratorStructural:add_instance.Y[2]


|DUT|SequenceGeneratorStructural:add_instance
reset => DFlipFlop0:dff_2.reset
reset => DFlipFlop1:dff_1.reset
reset => DFlipFlop0:dff_0.reset
clock => DFlipFlop0:dff_2.clk
clock => DFlipFlop1:dff_1.clk
clock => DFlipFlop0:dff_0.clk
Y[0] <= DFlipFlop0:dff_0.Q
Y[1] <= DFlipFlop1:dff_1.Q
Y[2] <= DFlipFlop0:dff_2.Q


|DUT|SequenceGeneratorStructural:add_instance|DFlipFlop0:dff_2
D => Q~reg0.DATAIN
clk => Q~reg0.CLK
reset => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DUT|SequenceGeneratorStructural:add_instance|DFlipFlop1:dff_1
D => Q~reg0.DATAIN
clk => Q~reg0.CLK
reset => Q~reg0.PRESET
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DUT|SequenceGeneratorStructural:add_instance|DFlipFlop0:dff_0
D => Q~reg0.DATAIN
clk => Q~reg0.CLK
reset => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


